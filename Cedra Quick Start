# Cedra Quick Start

## The Duality in 30 Seconds

### Base Constant:
Cedra = √3 + √2 + √(1/2) - 2 ≈ 1.853
ln(Cedra) ≈ 0.617

### CHAOS Formula:
Xn = (n × ln(Cedra)) mod 1

Sequence jumps:
- +0.617 (= ln(Cedra))
- -0.383 (= -(1 - ln(Cedra)))

### ORDER Formula:
Yn = (n - ln(Cedra)) mod 1

Constant result:
- 0.383 (= 1 - ln(Cedra))

### The Magic:
ln(Cedra) + (1 - ln(Cedra)) = 1
0.617 + 0.383 = 1
CHAOS + ORDER = UNITY

Bottom line: The constant from the static formula is exactly the negative jump amplitude from the dynamic formula.

## Python Implementation

```python
import math

# Define Cedra constant
cedra = math.sqrt(3) + math.sqrt(2) + math.sqrt(1/2) - 2
ln_cedra = math.log(cedra)

print(f"Cedra = {cedra}")
print(f"ln(Cedra) = {ln_cedra}")

# CHAOS Formula: Xn = (n × ln(Cedra)) mod 1
def chaos_sequence(n):
    return (n * ln_cedra) % 1

# ORDER Formula: Yn = (n - ln(Cedra)) mod 1
def order_sequence(n):
    return (n - ln_cedra) % 1

# Test the sequences
print("\nCHAOS sequence (first 10 values):")
for n in range(1, 11):
    xn = chaos_sequence(n)
    print(f"X{n} = {xn:.6f}")

print(f"\nORDER sequence (constant value):")
yn = order_sequence(1)
print(f"Yn = {yn:.6f} (same for all n)")

# Verify the duality
print(f"\nDuality verification:")
print(f"ln(Cedra) = {ln_cedra:.6f}")
print(f"1 - ln(Cedra) = {1 - ln_cedra:.6f}")
print(f"Sum = {ln_cedra + (1 - ln_cedra):.6f}")
```
